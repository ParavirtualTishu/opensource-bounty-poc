# This is a basic workflow to help you get started with Actions

name: CI

on: issue_comment

jobs:
  commented_set:
    name: Set the bounty
    if: ${{ startsWith(github.event.comment.body, '/set_bounty') }}
    runs-on: ubuntu-latest
    container: 
      image: paravirtualtishu/mxpy:latest
      env:
        GITHUB_USER: ${{ github.event.comment.user.login }}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so the job can check
      # the issuers.txt and hunters.txt files
      # - uses: actions/checkout@v3

      - name: Check comment is "/set_bounty bounty"
        uses: actions-ecosystem/action-regex-match@v2.0.2
        id: exact_match
        with:
          text: ${{ github.event.comment.body }}
          regex: '^\/set_bounty \d+$'
      
      - name: Uppercase username
        shell: bash
        run: |
          echo "GITHUB_PEM_SECRET_KEY=${GITHUB_USER^^}_PEM_SECRET" >>${GITHUB_ENV}
          echo "$GITHUB_PEM_SECRET_KEY"

      - name: Set bounty
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        if: ${{ steps.exact_match.outputs.match != '' && github.event.comment.user.login == github.event.issue.user.login }}
        run: |
          echo "Set bounty from container!"
          echo "${{ secrets[env.GITHUB_PEM_SECRET_KEY] }}" > key.pem
          cat key.pem
          mxpy --help

  commented_grant:
    name: Grant the bounty
    if: ${{ startsWith(github.event.comment.body, '/grant_bounty') }}
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so the job can check
      # the issuers.txt and hunters.txt files
      # - uses: actions/checkout@v3

      - name: Check comment is "/grant_bounty @github_username"
        uses: actions-ecosystem/action-regex-match@v2.0.2
        id: exact_match
        with:
          text: ${{ github.event.comment.body }}
          regex: '^\/grant_bounty @\w+$'

      - name: Grant bounty
        if: ${{ steps.exact_match.outputs.match != '' && github.event.comment.user.login == github.event.issue.user.login }}
        run: |
          echo "Grant bounty!"